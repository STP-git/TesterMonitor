services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tester-monitoring-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - DATA_DIR=${DATA_DIR:-/app/data}
      - CONFIG_FILE=${CONFIG_FILE:-/app/data/config.json}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=${LOG_FILE:-/app/logs/app.log}
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-5}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-10000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring-network

  nginx:
    image: nginx:alpine
    container_name: tester-monitoring-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - monitoring-network
    profiles:
      - production

networks:
  monitoring-network:
    driver: bridge

volumes:
  data:
    driver: local
  logs:
    driver: local